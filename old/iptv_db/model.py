import api as API
from app.convert import utcDateString2Local
from marshmallow import fields, pre_load, post_dump



class M3U( API.db.Model ):
    __tablename__       = 'M3U'
    m3_id               = API.db.Column( API.db.Integer, primary_key = True, autoincrement = True )
    m3_runtime          = API.db.Column( API.db.Integer, nullable = False )
    m3_title            = API.db.Column( API.db.String( 60 ), nullable = False )
    m3_link             = API.db.Column( API.db.String( 120 ), nullable = False )

    def __repr__(self):
        return '<M3U %r>' % self.username


class M3U_Attribute( API.db.Model ):
    __tablename__       = 'M3U_ATTR'
    ma_id               = API.db.Column( API.db.Integer, primary_key = True, autoincrement = True )
    ma_m3u_id           = API.db.Column( API.db.Integer, API.db.ForeignKey('M3U.m3_id'), nullable = False )
    ma_attribute        = API.db.Column( API.db.String( 20 ), nullable = False )
    ma_value            = API.db.Column( API.db.String, nullable = False )

    def __repr__(self):
        return '<M3U_Attribute %r>' % self.username


class Bouget( API.db.Model ):
    __tablename__       = 'BOUGET'
    b_id                = API.db.Column( API.db.Integer, primary_key = True, autoincrement = True )
    b_name              = API.db.Column( API.db.String( 20 ), nullable = False )

    def __repr__(self):
        return '<Bouget %r>' % self.username


class Channel( API.db.Model ):
    __tablename__       = 'CHANNEL'
    c_id                = API.db.Column( API.db.Integer, primary_key = True, autoincrement = True )
    c_name              = API.db.Column( API.db.String( 60 ), nullable = False )
    c_enabled           = API.db.Column( API.db.Boolean, nullable = False )
    c_b_id              = API.db.Column( API.db.Integer, API.db.ForeignKey('BOUGET.b_id'), nullable = False )
    c_m3_id             = API.db.Column( API.db.Integer, API.db.ForeignKey('M3U.m3_id'), nullable = False )

    def __repr__(self):
        return '<Channel %r>' % self.username

class ChannelSchema( API.mm.SQLAlchemySchema ):
    """Schema for the locking table, this is generated by the gencrud.py module
        When modifing the file make sure that you remove the table from the configuration.
    """
    c_id        = fields.Integer()
    c_name      = fields.String()
    c_enabled   = fields.Boolean()
    c_b_id      = fields.Integer()
    c_m3_id     = fields.Integer()

    @post_dump
    def post_dump_process( self, in_data, **kwargs ):
        return in_data

    @pre_load
    def pre_load_process( self, out_data, **kwargs ):
        out_data[ 'L_START_DATE' ] = utcDateString2Local( out_data[ 'L_START_DATE' ], '%Y-%m-%d %H:%M:%S' )
        return out_data


channelSchema   = ChannelSchema()
channelsSchema  = ChannelSchema( many = True )
