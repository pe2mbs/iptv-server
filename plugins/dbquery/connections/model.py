#
#   Python backend and Angular frontend code generation by gencrud
#   Copyright (C) 2018-2021 Marc Bertens-Nguyen m.bertens@pe2mbs.nl
#
#   This library is free software; you can redistribute it and/or modify
#   it under the terms of the GNU Library General Public License GPL-2.0-only
#   as published by the Free Software Foundation.
#
#   This library is distributed in the hope that it will be useful, but
#   WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
#   Library General Public License for more details.
#
#   You should have received a copy of the GNU Library General Public
#   License GPL-2.0-only along with this library; if not, write to the
#   Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
#   Boston, MA 02110-1301 USA
#
#   gencrud: 2021-10-24 19:21:17 version 3.0.685 by user mbertens
#
import webapp.api as API
from webapp.common.dbmem import DbBaseMemory
from webapp.common.crudmixin import CrudModelMixin




class Connection( API.db.Model, CrudModelMixin ):
    """Model for the bougets table, this is generated by the gencrud.py module
    When modifing the file make sure that you remove the table from the configuration.
    """
    __field_list__       = [ 'C_ID', 'C_LABEL', 'C_HOSTNAME', 'C_HOSTPORT', 'C_ENGINE', 'C_SCHEMA', 'C_USERNAME', 'C_PASSWORD' ]
    __tablename__        = 'connections'
    C_ID                 = API.db.Column( "c_id", API.db.Integer, autoincrement = True, primary_key = True )
    C_LABEL              = API.db.Column( "c_label", API.db.String( 32), nullable = False )
    C_HOSTNAME           = API.db.Column( "c_hostname", API.db.String( 128 ), nullable = False )
    C_HOSTPORT           = API.db.Column( "c_hostport", API.db.Integer, nullable = False )
    C_ENGINE             = API.db.Column( "c_engine", API.db.Integer, nullable = False )
    C_SCHEMA             = API.db.Column( "c_schema", API.db.String( 64 ), nullable = False )
    C_USERNAME           = API.db.Column( "c_username", API.db.String( 64 ), nullable = False )
    C_PASSWORD           = API.db.Column( "c_password", API.db.String( 64 ), nullable = False )
    C_OPTIONS            = API.db.Column( "c_options", API.db.LONGTEXT, nullable = False )

    def memoryInstance( self ):
        return ConnectionMemory( self )


API.dbtables.register( Connection )


class ConnectionMemory( DbBaseMemory ):
    __model_cls__       = Connection
    __tablename__       = 'connections'


API.memorytables.register( ConnectionMemory )