#
#   Python backend and Angular frontend code generation by gencrud
#   Copyright (C) 2018-2021 Marc Bertens-Nguyen m.bertens@pe2mbs.nl
#
#   This library is free software; you can redistribute it and/or modify
#   it under the terms of the GNU Library General Public License GPL-2.0-only
#   as published by the Free Software Foundation.
#
#   This library is distributed in the hope that it will be useful, but
#   WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
#   Library General Public License for more details.
#
#   You should have received a copy of the GNU Library General Public
#   License GPL-2.0-only along with this library; if not, write to the
#   Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
#   Boston, MA 02110-1301 USA
#
#   gencrud: 2021-10-24 19:21:22 version 3.0.685 by user mbertens
#
import webapp2.api as API
from webapp2.common.dbmem import DbBaseMemory
from webapp2.common.crudmixin import CrudModelMixin




class Channel( API.db.Model, CrudModelMixin ):
    """Model for the channels table, this is generated by the gencrud.py module
    When modifing the file make sure that you remove the table from the configuration.
    """
    __field_list__       = ['CH_ID', 'CH_NUMBER', 'CH_TITLE', 'CH_ENABLED', 'CH_M_ID', 'CH_B_ID']
    __tablename__        = 'channels'
    CH_ID                = API.db.Column( "ch_id", API.db.Integer, autoincrement = True, primary_key = True )
    CH_NUMBER            = API.db.Column( "ch_number", API.db.Integer, nullable = True )
    CH_TITLE             = API.db.Column( "ch_title", API.db.String( 255 ), nullable = False )
    CH_ENABLED           = API.db.Column( "ch_enabled", API.db.Boolean, default = False )
    CH_M_ID              = API.db.Column( "ch_m_id", API.db.Integer, API.db.ForeignKey( "m3u.m_id" ), nullable = True )
    CH_B_ID              = API.db.Column( "ch_b_id", API.db.Integer, API.db.ForeignKey( "bougets.b_id" ), nullable = True )

    CH_M_ID_FK           = API.db.relationship( 'M3u', backref = 'channels', lazy = True )
    CH_B_ID_FK           = API.db.relationship( 'Bouget', backref = 'channels', lazy = True )

    def memoryInstance( self ):
        return ChannelMemory( self )


API.dbtables.register( Channel )


class ChannelMemory( DbBaseMemory ):
    __model_cls__       = Channel
    __tablename__       = 'channels'


API.memorytables.register( ChannelMemory )
