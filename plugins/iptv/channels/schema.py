#
#   Python backend and Angular frontend code generation by gencrud
#   Copyright (C) 2018-2021 Marc Bertens-Nguyen m.bertens@pe2mbs.nl
#
#   This library is free software; you can redistribute it and/or modify
#   it under the terms of the GNU Library General Public License GPL-2.0-only
#   as published by the Free Software Foundation.
#
#   This library is distributed in the hope that it will be useful, but
#   WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
#   Library General Public License for more details.
#
#   You should have received a copy of the GNU Library General Public
#   License GPL-2.0-only along with this library; if not, write to the
#   Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
#   Boston, MA 02110-1301 USA
#
#   gencrud: 2021-10-24 19:21:22 version 3.0.685 by user mbertens
#
import webapp2.api as API
from marshmallow import fields, pre_load, post_dump
from webapp2.common.convert import value2Label, utcDateString2Local


class ChannelSchema( API.mm.SQLAlchemySchema ):
    """Schema for the channels table, this is generated by the gencrud.py module
    When modifing the file make sure that you remove the table from the configuration.
    """
    CH_ID    = fields.Integer()
    CH_NUMBER    = fields.Integer()
    CH_TITLE    = fields.String()
    CH_ENABLED    = fields.Boolean()
    CH_M_ID    = fields.Integer()
    CH_M_ID_FK              = API.mm.Nested( 'M3uSchema' )
    CH_B_ID    = fields.Integer()
    CH_B_ID_FK              = API.mm.Nested( 'BougetSchema' )

    @post_dump
    def post_dump_process( self, in_data, **kwargs ):
        in_data[ 'CH_ENABLED_LABEL' ] = value2Label( {True: 'Yes', False: 'No'}, in_data[ 'CH_ENABLED' ] )
        return in_data

    @pre_load
    def pre_load_process( self, out_data, **kwargs ):
        return out_data


channelsSchema   = ChannelSchema()
channelssSchema  = ChannelSchema( many = True )

