"""empty message

Revision ID: R2021_01
Revises: R2021_00
Create Date: 2021-12-04 07:41:21.491861

"""
from alembic import op
import sqlalchemy as sa
import importlib
import logging
import webapp2.extensions.database
from sqlalchemy import orm


# revision identifiers, used by Alembic.
revision = 'R2021_01'
down_revision = 'R2021_00'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bougets',
    sa.Column('b_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('b_label', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('b_id', name=op.f('pk_bougets'))
    )
    op.create_table('m3u',
    sa.Column('m_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('m_title', sa.String(length=255), nullable=False),
    sa.Column('m_link', sa.String(length=255), nullable=False),
    sa.Column('m_duration', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('m_id', name=op.f('pk_m3u'))
    )
    op.create_table('channels',
    sa.Column('ch_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ch_number', sa.Integer(), nullable=True),
    sa.Column('ch_title', sa.String(length=255), nullable=False),
    sa.Column('ch_enabled', sa.Boolean(), nullable=True),
    sa.Column('ch_m_id', sa.Integer(), nullable=True),
    sa.Column('ch_b_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ch_b_id'], ['bougets.b_id'], name=op.f('fk_channels_ch_b_id_bougets')),
    sa.ForeignKeyConstraint(['ch_m_id'], ['m3u.m_id'], name=op.f('fk_channels_ch_m_id_m3u')),
    sa.PrimaryKeyConstraint('ch_id', name=op.f('pk_channels'))
    )
    op.create_table('m3u_attr',
    sa.Column('ma_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ma_attribute', sa.String(length=30), nullable=False),
    sa.Column('ma_value', sa.String(length=255), nullable=False),
    sa.Column('ma_m_id', sa.Integer(), nullable=False),
    sa.Column('ma_overide', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ma_m_id'], ['m3u.m_id'], name=op.f('fk_m3u_attr_ma_m_id_m3u')),
    sa.PrimaryKeyConstraint('ma_id', name=op.f('pk_m3u_attr'))
    )
    # ### end Alembic commands ###
    try:
        module = importlib.import_module( 'runonce.{}'.format( revision ) )
        if hasattr( module, 'upgrade' ):
            module.upgrade()

        else:
            logging.warning( "Revision '{}' has no upgrade() function".format( revision ) )

    except ModuleNotFoundError:
        logging.warning( "Revision '{}' has no runonce script".format( revision ) )

    except Exception:
        raise

    return


def downgrade():
    try:
        module = importlib.import_module( 'runonce.{}'.format( revision ) )
        if hasattr( module, 'downgrade' ):
            module.downgrade()

        else:
            logging.warning( "Revision '{}' has no downgrade() function".format( revision ) )

    except ModuleNotFoundError:
        logging.warning( "Revision '{}' has no runonce script".format( revision ) )

    except Exception:
        raise

    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('m3u_attr')
    op.drop_table('channels')
    op.drop_table('m3u')
    op.drop_table('bougets')
    # ### end Alembic commands ###
    return