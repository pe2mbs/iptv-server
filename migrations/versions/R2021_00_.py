"""empty message

Revision ID: R2021_00
Revises: 
Create Date: 2021-10-24 08:44:27.836772

"""
from alembic import op
import sqlalchemy as sa
import importlib
import logging
import webapp2.extensions.database
from sqlalchemy import orm


# revision identifiers, used by Alembic.
revision = 'R2021_00'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('feedback',
    sa.Column('f_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('f_name', sa.String(length=50), nullable=False),
    sa.Column('f_type', sa.Integer(), nullable=False),
    sa.Column('f_voted', sa.Integer(), nullable=False),
    sa.Column('f_subject', sa.String(length=100), nullable=False),
    sa.Column('f_message', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('f_id', name=op.f('pk_feedback'))
    )
    op.create_table('language',
    sa.Column('la_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('la_label', sa.String(length=30), nullable=False),
    sa.Column('la_code2', sa.String(length=2), nullable=False),
    sa.Column('la_code3', sa.String(length=3), nullable=False),
    sa.Column('la_country_code2', sa.String(length=2), nullable=False),
    sa.Column('la_country_code3', sa.String(length=3), nullable=False),
    sa.PrimaryKeyConstraint('la_id', name=op.f('pk_language'))
    )
    op.create_table('language_translates',
    sa.Column('lt_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('lt_label', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('lt_id', name=op.f('pk_language_translates'))
    )
    op.create_table('locking',
    sa.Column('l_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('l_user', webapp2.extensions.database.LONGTEXT(), nullable=False),
    sa.Column('l_table', webapp2.extensions.database.LONGTEXT(), nullable=False),
    sa.Column('l_record_id', sa.Integer(), nullable=False),
    sa.Column('l_start_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('l_id', name=op.f('pk_locking'))
    )
    op.create_table('mod_access',
    sa.Column('ma_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ma_module', sa.String(length=50), nullable=False),
    sa.Column('ma_description', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('ma_id', name=op.f('pk_mod_access'))
    )
    op.create_table('news',
    sa.Column('n_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('n_message', sa.String(length=255), nullable=False),
    sa.Column('n_active', sa.Boolean(), nullable=True),
    sa.Column('n_alert', sa.Boolean(), nullable=True),
    sa.Column('n_keep', sa.Boolean(), nullable=True),
    sa.Column('n_start_date', sa.Date(), nullable=False),
    sa.Column('n_end_date', sa.Date(), nullable=True),
    sa.Column('n_remark', webapp2.extensions.database.LONGTEXT(), nullable=True),
    sa.PrimaryKeyConstraint('n_id', name=op.f('pk_news'))
    )
    op.create_table('roles',
    sa.Column('r_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('r_role', sa.String(length=255), nullable=False),
    sa.Column('r_remark', webapp2.extensions.database.LONGTEXT(), nullable=True),
    sa.PrimaryKeyConstraint('r_id', name=op.f('pk_roles'))
    )
    op.create_table('tracking',
    sa.Column('t_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('t_user', webapp2.extensions.database.LONGTEXT(), nullable=False),
    sa.Column('t_table', webapp2.extensions.database.LONGTEXT(), nullable=False),
    sa.Column('t_action', sa.Integer(), nullable=False),
    sa.Column('t_record_id', sa.Integer(), nullable=False),
    sa.Column('t_change_date_time', sa.DateTime(), nullable=False),
    sa.Column('t_contents', webapp2.extensions.database.LONGTEXT(), nullable=True),
    sa.PrimaryKeyConstraint('t_id', name=op.f('pk_tracking'))
    )
    op.create_table('language_reference',
    sa.Column('lr_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('lr_la_id', sa.Integer(), nullable=False),
    sa.Column('tr_text', webapp2.extensions.database.LONGTEXT(), nullable=False),
    sa.Column('lr_lt_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lr_la_id'], ['language.la_id'], name=op.f('fk_language_reference_lr_la_id_language')),
    sa.ForeignKeyConstraint(['lr_lt_id'], ['language_translates.lt_id'], name=op.f('fk_language_reference_lr_lt_id_language_translates')),
    sa.PrimaryKeyConstraint('lr_id', name=op.f('pk_language_reference'))
    )
    op.create_table('role_access',
    sa.Column('ra_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ra_r_id', sa.Integer(), nullable=False),
    sa.Column('ra_ma_id', sa.Integer(), nullable=False),
    sa.Column('ra_create', sa.Boolean(), nullable=True),
    sa.Column('ra_read', sa.Boolean(), nullable=True),
    sa.Column('ra_update', sa.Boolean(), nullable=True),
    sa.Column('ra_delete', sa.Boolean(), nullable=True),
    sa.Column('r_remark', webapp2.extensions.database.LONGTEXT(), nullable=True),
    sa.ForeignKeyConstraint(['ra_ma_id'], ['mod_access.ma_id'], name=op.f('fk_role_access_ra_ma_id_mod_access')),
    sa.ForeignKeyConstraint(['ra_r_id'], ['roles.r_id'], name=op.f('fk_role_access_ra_r_id_roles')),
    sa.PrimaryKeyConstraint('ra_id', name=op.f('pk_role_access'))
    )
    op.create_table('user',
    sa.Column('u_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('u_active', sa.Boolean(), nullable=True),
    sa.Column('u_name', sa.String(length=30), nullable=False),
    sa.Column('u_role', sa.Integer(), nullable=True),
    sa.Column('u_hash_password', sa.String(length=255), nullable=False),
    sa.Column('u_must_change', sa.Boolean(), nullable=True),
    sa.Column('u_first_name', sa.String(length=50), nullable=False),
    sa.Column('u_middle_name', sa.String(length=50), nullable=True),
    sa.Column('u_last_name', sa.String(length=50), nullable=False),
    sa.Column('u_email', sa.String(length=100), nullable=False),
    sa.Column('u_remark', webapp2.extensions.database.LONGTEXT(), nullable=True),
    sa.Column('u_locale', sa.Integer(), nullable=True),
    sa.Column('u_listitems', sa.Integer(), nullable=True),
    sa.Column('u_profile', webapp2.extensions.database.LONGTEXT(), nullable=True),
    sa.ForeignKeyConstraint(['u_role'], ['roles.r_id'], name=op.f('fk_user_u_role_roles')),
    sa.PrimaryKeyConstraint('u_id', name=op.f('pk_user'))
    )
    # ### end Alembic commands ###
    try:
        module = importlib.import_module( 'runonce.{}'.format( revision ) )
        if hasattr( module, 'upgrade' ):
            module.upgrade()

        else:
            logging.warning( "Revision '{}' has no upgrade() function".format( revision ) )

    except ModuleNotFoundError:
        logging.warning( "Revision '{}' has no runonce script".format( revision ) )

    except Exception:
        raise

    return


def downgrade():
    try:
        module = importlib.import_module( 'runonce.{}'.format( revision ) )
        if hasattr( module, 'downgrade' ):
            module.downgrade()

        else:
            logging.warning( "Revision '{}' has no downgrade() function".format( revision ) )

    except ModuleNotFoundError:
        logging.warning( "Revision '{}' has no runonce script".format( revision ) )

    except Exception:
        raise

    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user')
    op.drop_table('role_access')
    op.drop_table('language_reference')
    op.drop_table('tracking')
    op.drop_table('roles')
    op.drop_table('news')
    op.drop_table('mod_access')
    op.drop_table('locking')
    op.drop_table('language_translates')
    op.drop_table('language')
    op.drop_table('feedback')
    # ### end Alembic commands ###
    return