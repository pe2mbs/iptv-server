"""empty message

Revision ID: R2022_02
Revises: R2021_01
Create Date: 2022-04-07 21:07:07.015428

"""
from alembic import op
import sqlalchemy as sa
import importlib
import logging
import webapp.extensions.database
from sqlalchemy import orm


# revision identifiers, used by Alembic.
revision = 'R2022_02'
down_revision = 'R2021_01'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('connections',
    sa.Column('c_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('c_label', sa.String(length=32), nullable=False),
    sa.Column('c_hostname', sa.String(length=128), nullable=False),
    sa.Column('c_hostport', sa.Integer(), nullable=False),
    sa.Column('c_engine', sa.Integer(), nullable=False),
    sa.Column('c_schema', sa.String(length=64), nullable=False),
    sa.Column('c_username', sa.String(length=64), nullable=False),
    sa.Column('c_password', sa.String(length=64), nullable=False),
    sa.Column('c_options', webapp.extensions.database.LONGTEXT(), nullable=False),
    sa.PrimaryKeyConstraint('c_id', name=op.f('pk_connections'))
    )
    op.drop_table('iptv_bouget')
    op.drop_table('iptv_alias')
    op.drop_table('iptv_channel')
    op.drop_table('m3u_attr')
    op.drop_table('bougets')
    op.drop_table('m3u')
    op.drop_table('iptv_replace')
    op.drop_table('channels')
    op.drop_table('iptv_episode')
    op.drop_table('iptv_serie')
    op.drop_table('iptv_config')
    op.drop_table('iptv_movie')
    # ### end Alembic commands ###
    try:
        module = importlib.import_module( 'runonce.{}'.format( revision ) )
        if hasattr( module, 'upgrade' ):
            module.upgrade()

        else:
            logging.warning( "Revision '{}' has no upgrade() function".format( revision ) )

    except ModuleNotFoundError:
        logging.warning( "Revision '{}' has no runonce script".format( revision ) )

    except Exception:
        raise

    return


def downgrade():
    try:
        module = importlib.import_module( 'runonce.{}'.format( revision ) )
        if hasattr( module, 'downgrade' ):
            module.downgrade()

        else:
            logging.warning( "Revision '{}' has no downgrade() function".format( revision ) )

    except ModuleNotFoundError:
        logging.warning( "Revision '{}' has no runonce script".format( revision ) )

    except Exception:
        raise

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('iptv_movie',
    sa.Column('im_id', sa.INTEGER(), nullable=False),
    sa.Column('im_enabled', sa.BOOLEAN(), nullable=True),
    sa.Column('im_index', sa.INTEGER(), nullable=True),
    sa.Column('im_name', sa.VARCHAR(length=128), nullable=True),
    sa.Column('im_country', sa.VARCHAR(length=2), nullable=True),
    sa.Column('im_stitle', sa.VARCHAR(length=128), nullable=True),
    sa.Column('im_update', sa.DATETIME(), nullable=True),
    sa.Column('im_group', sa.VARCHAR(length=50), nullable=True),
    sa.Column('im_duration', sa.INTEGER(), nullable=True),
    sa.Column('im_link', sa.VARCHAR(length=255), nullable=True),
    sa.Column('im_tvg_id', sa.VARCHAR(length=50), nullable=True),
    sa.Column('im_tvg_logo', sa.VARCHAR(), nullable=True),
    sa.Column('im_tvg_name', sa.VARCHAR(length=50), nullable=True),
    sa.PrimaryKeyConstraint('im_id')
    )
    op.create_table('iptv_config',
    sa.Column('cfg_id', sa.INTEGER(), nullable=False),
    sa.Column('cfg_enabled', sa.BOOLEAN(), nullable=True),
    sa.Column('cfg_name', sa.VARCHAR(length=50), nullable=True),
    sa.Column('cfg_location', sa.VARCHAR(length=255), nullable=True),
    sa.Column('cfg_username', sa.VARCHAR(length=50), nullable=True),
    sa.Column('cfg_password', sa.VARCHAR(length=50), nullable=True),
    sa.Column('cfg_index', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('cfg_id')
    )
    op.create_table('iptv_serie',
    sa.Column('is_id', sa.INTEGER(), nullable=False),
    sa.Column('is_enabled', sa.BOOLEAN(), nullable=True),
    sa.Column('is_index', sa.INTEGER(), nullable=True),
    sa.Column('is_name', sa.VARCHAR(length=100), nullable=True),
    sa.Column('is_country', sa.VARCHAR(length=2), nullable=True),
    sa.Column('is_update', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('is_id')
    )
    op.create_table('iptv_episode',
    sa.Column('ie_id', sa.INTEGER(), nullable=False),
    sa.Column('ie_name', sa.VARCHAR(length=50), nullable=True),
    sa.Column('ie_country', sa.VARCHAR(length=2), nullable=True),
    sa.Column('ie_is_id', sa.INTEGER(), nullable=False),
    sa.Column('ie_season', sa.INTEGER(), nullable=True),
    sa.Column('ie_episode', sa.INTEGER(), nullable=True),
    sa.Column('ie_update', sa.DATETIME(), nullable=True),
    sa.Column('ie_group', sa.VARCHAR(length=50), nullable=True),
    sa.Column('ie_duration', sa.INTEGER(), nullable=True),
    sa.Column('ie_link', sa.VARCHAR(length=255), nullable=True),
    sa.Column('ie_tvg_id', sa.VARCHAR(length=50), nullable=True),
    sa.Column('ie_tvg_logo', sa.VARCHAR(), nullable=True),
    sa.Column('ie_tvg_name', sa.VARCHAR(length=50), nullable=True),
    sa.ForeignKeyConstraint(['ie_is_id'], ['iptv_serie.is_id'], ),
    sa.PrimaryKeyConstraint('ie_id')
    )
    op.create_table('channels',
    sa.Column('ch_id', sa.INTEGER(), nullable=False),
    sa.Column('ch_number', sa.INTEGER(), nullable=True),
    sa.Column('ch_title', sa.VARCHAR(length=255), nullable=False),
    sa.Column('ch_enabled', sa.BOOLEAN(), nullable=True),
    sa.Column('ch_m_id', sa.INTEGER(), nullable=True),
    sa.Column('ch_b_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['ch_b_id'], ['bougets.b_id'], name='fk_channels_ch_b_id_bougets'),
    sa.ForeignKeyConstraint(['ch_m_id'], ['m3u.m_id'], name='fk_channels_ch_m_id_m3u'),
    sa.PrimaryKeyConstraint('ch_id', name='pk_channels')
    )
    op.create_table('iptv_replace',
    sa.Column('ir_id', sa.INTEGER(), nullable=False),
    sa.Column('ir_find', sa.VARCHAR(length=128), nullable=True),
    sa.Column('ir_replace', sa.VARCHAR(length=128), nullable=True),
    sa.PrimaryKeyConstraint('ir_id')
    )
    op.create_table('m3u',
    sa.Column('m_id', sa.INTEGER(), nullable=False),
    sa.Column('m_title', sa.VARCHAR(length=255), nullable=False),
    sa.Column('m_link', sa.VARCHAR(length=255), nullable=False),
    sa.Column('m_duration', sa.INTEGER(), nullable=False),
    sa.PrimaryKeyConstraint('m_id', name='pk_m3u')
    )
    op.create_table('bougets',
    sa.Column('b_id', sa.INTEGER(), nullable=False),
    sa.Column('b_label', sa.VARCHAR(length=30), nullable=False),
    sa.PrimaryKeyConstraint('b_id', name='pk_bougets')
    )
    op.create_table('m3u_attr',
    sa.Column('ma_id', sa.INTEGER(), nullable=False),
    sa.Column('ma_attribute', sa.VARCHAR(length=30), nullable=False),
    sa.Column('ma_value', sa.VARCHAR(length=255), nullable=False),
    sa.Column('ma_m_id', sa.INTEGER(), nullable=False),
    sa.Column('ma_overide', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['ma_m_id'], ['m3u.m_id'], name='fk_m3u_attr_ma_m_id_m3u'),
    sa.PrimaryKeyConstraint('ma_id', name='pk_m3u_attr')
    )
    op.create_table('iptv_channel',
    sa.Column('ic_id', sa.INTEGER(), nullable=False),
    sa.Column('ic_enabled', sa.BOOLEAN(), nullable=True),
    sa.Column('ic_name', sa.VARCHAR(length=50), nullable=True),
    sa.Column('ic_alias', sa.VARCHAR(length=50), nullable=True),
    sa.Column('ic_country', sa.VARCHAR(length=2), nullable=True),
    sa.Column('ic_index', sa.INTEGER(), nullable=True),
    sa.Column('ic_update', sa.DATETIME(), nullable=True),
    sa.Column('ic_group', sa.VARCHAR(length=50), nullable=True),
    sa.Column('ic_ib_id', sa.INTEGER(), nullable=False),
    sa.Column('ic_duration', sa.INTEGER(), nullable=True),
    sa.Column('ic_link', sa.VARCHAR(length=255), nullable=True),
    sa.Column('ic_tvg_id', sa.VARCHAR(length=50), nullable=True),
    sa.Column('ic_tvg_logo', sa.VARCHAR(), nullable=True),
    sa.Column('ic_tvg_name', sa.VARCHAR(length=50), nullable=True),
    sa.ForeignKeyConstraint(['ic_ib_id'], ['iptv_bouget.ib_id'], ),
    sa.PrimaryKeyConstraint('ic_id')
    )
    op.create_table('iptv_alias',
    sa.Column('ia_id', sa.INTEGER(), nullable=False),
    sa.Column('ia_name', sa.VARCHAR(length=128), nullable=True),
    sa.Column('ia_alias', sa.VARCHAR(length=128), nullable=True),
    sa.Column('ia_index', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('ia_id')
    )
    op.create_table('iptv_bouget',
    sa.Column('ib_id', sa.INTEGER(), nullable=False),
    sa.Column('ib_enabled', sa.BOOLEAN(), nullable=True),
    sa.Column('ib_index', sa.INTEGER(), nullable=True),
    sa.Column('ib_name', sa.VARCHAR(length=100), nullable=True),
    sa.Column('ib_country', sa.VARCHAR(length=2), nullable=True),
    sa.Column('ib_update', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('ib_id')
    )
    op.drop_table('connections')
    # ### end Alembic commands ###
    return